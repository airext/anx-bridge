<?xml version="1.0" encoding="UTF-8"?>
<project name="Air Native Extension Build Scripts" default="all">

    <!--=====================================================================-->
    <!--                             Properties                              -->
    <!--=====================================================================-->

    <property name="project.name" value="anx-bridge" />
    <property name="product.name" value="ANXBridge" />
    <property name="extension.id" value="com.github.airext.Bridge" />


    <property name="ios.project.dir" value="../${project.name}-xcode" />
    <property name="osx.project.dir" value="../${project.name}-xcode" />
    <property name="air.project.dir" value="../${project.name}-air/${project.name}" />
    <property name="air-default.project.dir" value="../${project.name}-air/${project.name}-default" />
    <property name="air-debug.project.dir" value="../${project.name}-air/${project.name}-debug" />
    <property name="android.project.dir" value="../${project.name}-android" />

	<property file="build.properties"/>

    <!--=====================================================================-->
    <!--                             Build All                               -->
    <!--=====================================================================-->

    <target name="all" depends="ios,osx,android,air,default,package" description="Full build of extension"/>

    <!--=====================================================================-->
    <!--                          Build iOS Library                          -->
    <!--=====================================================================-->

    <target name="ios" description="Build iOS Library">

        <!-- Create temporary directory for iOS artifacts -->
        <mkdir dir="temp/ios/build/"/>

        <!-- Build iOS part of the extension -->
        <exec executable="xcodebuild" failonerror="true" dir="${ios.project.dir}">
            <arg line='-project ${product.name}.xcodeproj'/>
            <arg line='-sdk iphoneos' />
            <arg line="-target ${product.name}-iOS"/>
            <arg line='-configuration Release'/>
            <arg line='SYMROOT=$(PWD)/../build/temp/ios/build'/>
        </exec>

        <!-- Build iOS-simulator part of the extension-->
        <exec executable="xcodebuild" failonerror="true" dir="${ios.project.dir}">
            <arg line='-project ${product.name}.xcodeproj'/>
            <arg line='-sdk iphonesimulator' />
            <arg line="-target ${product.name}-iOS"/>
            <arg line='-configuration Release'/>
            <arg line='SYMROOT=$(PWD)/../build/temp/ios/build'/>
        </exec>

        <!-- Copy iOS build artifacts to temporary build folder -->
        <copy file="temp/ios/build/Release-iphoneos/lib${product.name}.a" todir="temp/ios" overwrite="true"/>

        <!-- Copy iOS build artifacts to temporary build folder -->
        <copy file="temp/ios/build/Release-iphonesimulator/lib${product.name}.a" tofile="temp/ios-simulator/lib${product.name}Simulator.a" overwrite="true"/>

        <!-- Remove temporary directory for iOS artifacts -->
        <delete dir="temp/ios/build/"/>
    </target>

    <!--=====================================================================-->
    <!--                          Build OSX Library                          -->
    <!--=====================================================================-->

    <target name="osx" description="Build iOS Library">

        <!-- Create temporary directory for iOS artifacts -->
        <mkdir dir="temp/osx/build/"/>

        <!-- Build OSX part of the extension -->
        <exec executable="xcodebuild" failonerror="true" dir="${osx.project.dir}">
            <arg line='-project ${product.name}.xcodeproj'/>
            <arg line='-sdk macosx' />
            <arg line="-target ${product.name}-Mac"/>
            <arg line='-configuration Release'/>
            <arg line='SYMROOT=$(PWD)/../build/temp/osx/build'/>
        </exec>

        <!-- Copy OSX build artifacts to temporary build folder -->
        <copy todir="temp/osx/${product.name}.framework">
            <fileset dir="temp/osx/build/Release/${product.name}.framework" includes="**/**" />
        </copy>

        <!-- Remove temporary directory for iOS artifacts -->
        <delete dir="temp/osx/build/"/>
    </target>

    <!--=====================================================================-->
    <!--                        Build Android Library                        -->
    <!--=====================================================================-->

	<target name="android" description="Build android Library">

        <!-- Builds Android part of the extension -->
		<!-- Compiles Android project and makes .JAR -->
		<exec executable="gradle" failonerror="true" dir="${android.project.dir}/${product.name}">
			<arg line="jar" />
			<arg line="--info" />
		</exec>

        <!-- Copy API library to ./bin/include directory-->
		<copy file="${android.project.dir}/${product.name}/${product.name}-api/build/libs/${product.name}-api.jar" tofile="../bin/include/android/${product.name}.jar" overwrite="true"/>

        <copy file="${android.project.dir}/${product.name}/${product.name}-api/build/libs/${product.name}-api.jar" tofile="temp/android/anx-bridge-api.jar" overwrite="true"/>

        <!-- Copy implementation library to temporary build folder -->
		<copy file="${android.project.dir}/${product.name}/${product.name}-impl/build/libs/${product.name}-impl.jar" tofile="temp/android/lib${product.name}.jar" overwrite="true"/>

        <!-- Copy manifest to include it into ANE file -->
        <copy file="${android.project.dir}/${product.name}/${product.name}-impl/src/main/AndroidManifest.xml" todir="temp/android" overwrite="true"/>

	</target>

    <!--=====================================================================-->
    <!--                         Build AIR Library                           -->
    <!--=====================================================================-->

    <target name="air" description="Build swc library">

        <!-- Create temporary directory -->
		<mkdir dir="temp/swc/build/"/>

        <!-- Gather classes for the library -->
		<fileset dir="${air.project.dir}/src" casesensitive="yes" id="classfiles">
			<include name="**/*.as"/>
		</fileset>
		<pathconvert property="classlist" refid="classfiles" pathsep=" " dirsep=".">
			<regexpmapper from=".*src.(.*)\.as" to="\1"/>
		</pathconvert>

        <!-- Compile .SWC library -->
        <exec executable="java" failonerror="true">
            <arg line='-jar ${air.sdk}/lib/compc-cli.jar' />
            <arg line='-debug=false' />
            <arg line='-source-path ${air.project.dir}/src'/>
            <arg line='-output temp/swc/${project.name}.swc'/>
            <arg line='-swf-version=13'/>
            <arg line='-external-library-path+="${air.sdk}/frameworks/libs/air/airglobal.swc"'/>
            <arg line='-include-classes ${classlist}'/>
        </exec>

        <!-- Unzip .SWC to copy internal library.swf file to corresponded platfom folders -->
		<unzip src="temp/swc/${project.name}.swc" dest="temp/swc/build" overwrite="true"/>

        <!-- Copy library.swf to iOS platform folder -->
		<copy file="temp/swc/build/library.swf" todir="temp/ios" overwrite="true"/>

        <!-- Copy library.swf to iOS-simulator platform folder -->
		<copy file="temp/swc/build/library.swf" todir="temp/ios-simulator" overwrite="true"/>

        <!-- Copy library.swf to OSX platform folder -->
		<copy file="temp/swc/build/library.swf" todir="temp/osx" overwrite="true"/>

        <!-- Copy library.swf to Android platform folder -->
		<copy file="temp/swc/build/library.swf" todir="temp/android" overwrite="true"/>

        <!-- Remove temporary folder -->
		<delete dir="temp/swc/build/"/>
	</target>

    <!--=====================================================================-->
    <!--                     Build AIR Default Library                       -->
    <!--=====================================================================-->

    <target name="default" description="Build default swc library">

        <!-- Create temporary folder -->
		<mkdir dir="temp/default/"/>

        <!-- Gather classes for default .SWC library -->
		<fileset dir="${air-default.project.dir}/src" casesensitive="yes" id="classfiles2">
			<include name="**/*.as"/>
		</fileset>
		<pathconvert property="classlist-default" refid="classfiles2" pathsep=" " dirsep=".">
			<regexpmapper from=".*src.(.*)\.as" to="\1"/>
		</pathconvert>

        <!-- Compile default .SWC library -->
        <exec executable="java" failonerror="true">
            <arg line='-jar ${air.sdk}/lib/compc-cli.jar' />
            <arg line='-debug=false' />
            <arg line='-source-path ${air-default.project.dir}/src'/>
            <arg line='-output temp/default/${project.name}.swc'/>
            <arg line='-swf-version=13'/>
            <arg line='-external-library-path+="${air.sdk}/frameworks/libs/air/airglobal.swc"'/>
            <arg line='-include-classes ${classlist-default}'/>
        </exec>

        <!-- Unzip .SWC to copy internal library.swf file to default platform folder -->
		<unzip src="temp/default/${project.name}.swc" dest="temp/default/swc" overwrite="true"/>

        <!-- Copy library.swf to default platform folder -->
		<copy file="temp/default/swc/library.swf" todir="temp/default" overwrite="true"/>

        <!-- Remove temporary folder -->
		<delete dir="temp/default/swc"/>
	</target>

    <!--=====================================================================-->
    <!--                         Package ANE file                            -->
    <!--=====================================================================-->

    <target name="package" description="Create the extension package">

        <!-- Package ANE file-->
        <exec executable="java" failonerror="true" dir="temp">
            <arg line='-jar ${air.sdk}/lib/adt.jar' />
            <arg line="-package"/>
            <arg line="-storetype"/>
            <arg line="pkcs12"/>
            <arg line="-keystore"/>
            <arg line="${keystore.file}"/>
            <arg line="-storepass"/>
            <arg line="${keystore.password}"/>
            <arg line="-target"/>
            <arg line="ane"/>
            <arg line="${project.name}.ane"/>
            <arg line="../extension.xml"/>
            <arg line="-swc swc/${project.name}.swc"/>
            <arg line="-platform iPhone-ARM -platformoptions ../platform-ios.xml -C ios/ ."/>
            <arg line="-platform iPhone-x86 -platformoptions ../platform-ios.xml -C ios-simulator/ ."/>
            <arg line="-platform MacOS-x86-64 -C osx/ ."/>
            <arg line="-platform Android-ARM64 -platformoptions ../platform-android.xml -C android/ ."/>
            <arg line="-platform Android-ARM -platformoptions ../platform-android.xml -C android/ ."/>
            <arg line="-platform Android-x86 -platformoptions ../platform-android.xml -C android/ ."/>
            <arg line="-platform default -C default/ ."/>
        </exec>

        <!-- Move packaged .ANE file to /bin directory -->
        <move file="temp/${project.name}.ane" tofile="../bin/${extension.id}.ane" force="true" />

        <!-- Move default .SWC library to /bin directory -->
        <copy file="temp/default/${project.name}.swc" tofile="../bin/${extension.id}.swc" force="true" />

        <!-- Remove temporary directory -->
        <delete dir="temp"/>
        <delete dir="ios" />
        <delete dir="osx" />
    </target>

</project>